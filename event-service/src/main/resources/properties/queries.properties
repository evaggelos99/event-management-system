# Properties file to store the queries for CRUD operation in the DB
# You could also change the queries to this: DELETE FROM ems_attendee.attendees WHERE id = :id -> and you would call .bind("id", uuid))
# ems_event.events
org.com.ems.queries.event.save=INSERT INTO ems_event.events (id, created_at, last_updated, name, place, event_type, attendee_ids, organizer_id, limit_of_people, sponsors_ids, start_time, duration, streamable) values($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13)
org.com.ems.queries.event.edit=UPDATE ems_event.events SET id = $1, last_updated = $2, name = $3, place = $4, event_type = $5, attendee_ids = $6, organizer_id = $7, limit_of_people = $8, sponsors_ids = $9, start_time = $10, duration = $11, streamable = $12 WHERE id = $13
org.com.ems.queries.event.get-all=SELECT * FROM ems_event.events
org.com.ems.queries.event.get-id=SELECT * FROM ems_event.events WHERE id = $1
org.com.ems.queries.event.delete-id=DELETE FROM ems_event.events WHERE id = $1

# ems_event.event_streams
org.com.ems.queries.event.add-event-stream=INSERT INTO ems_event.event_stream(uuid, created_at, last_updated, stream_type, inception_time, message_type, content, language, is_important, metadata) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)
# BASED ON an eventId retrieve the records
org.com.ems.queries.event.get-event-stream=SELECT * FROM ems_event.event_stream WHERE uuid = $1