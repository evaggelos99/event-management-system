# Properties file to store the queries for CRUD operation in the DB
# You could also change the queries to this: DELETE FROM attendees WHERE id = :id -> and you would call .bind("id", uuid))
# ems_user.ems_admin.users
io.github.evaggelos99.ems.user-service.db.save=INSERT INTO ems_admin.users (id, created_at, last_updated, username, email, first_name, last_name, role, mobile_phone, birth_date) values($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)
io.github.evaggelos99.ems.user-service.db.edit=UPDATE ems_admin.users SET last_updated = $1, username = $2, email = $3, first_name = $4, last_name = $5, role = $6, mobile_phone = $7, birth_date= $8  WHERE id = $9
io.github.evaggelos99.ems.user-service.db.get-all=SELECT * FROM ems_admin.users
io.github.evaggelos99.ems.user-service.db.get-id=SELECT * FROM ems_admin.users WHERE id = $1
io.github.evaggelos99.ems.user-service.db.delete-id=DELETE FROM ems_admin.users WHERE id = $1
io.github.evaggelos99.ems.user-service.db.attendees-came-to-all-events=SELECT COUNT(id) FROM ems_event.event WHERE attendees_ids @> ARRAY[$1]
io.github.evaggelos99.ems.user-service.db.add-sponsor-entity-uuid=INSERT INTO ems_admin.user_id_map_to_sponsor (entity_id, user_id) VALUES ($1, $2);
io.github.evaggelos99.ems.user-service.db.add-attendee-entity-uuid=INSERT INTO ems_admin.user_id_map_to_attendee (entity_id, user_id) VALUES ($1, $2);
io.github.evaggelos99.ems.user-service.db.add-organizer-entity-uuid=INSERT INTO ems_admin.user_id_map_to_organizer (entity_id, user_id) VALUES ($1, $2);
io.github.evaggelos99.ems.user-service.db.entity-uuid=\
    SELECT * FROM ems_admin.users WHERE id = (SELECT user_id FROM ems_admin.user_id_map_to_sponsor WHERE entity_id = $1 \
    UNION \
    SELECT user_id FROM ems_admin.user_id_map_to_attendee WHERE entity_id = $1 \
    UNION \
    SELECT user_id FROM ems_admin.user_id_map_to_organizer WHERE entity_id = $1);